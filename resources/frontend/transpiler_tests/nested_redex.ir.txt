FTerm
========
Let {
    name: "a",
    t: Int {
        value: 1,
    },
    body: Defs {
        defs: [
            (
                "f",
                Def {
                    args: [
                        (
                            "x",
                            Uniform,
                        ),
                    ],
                    body: Redex {
                        function: Identifier {
                            name: "_int_add",
                            effect: Simple,
                        },
                        args: [
                            Identifier {
                                name: "a",
                                effect: Simple,
                            },
                            Identifier {
                                name: "x",
                                effect: Simple,
                            },
                        ],
                    },
                    c_type: Default,
                },
            ),
        ],
        body: Some(
            Redex {
                function: Identifier {
                    name: "f",
                    effect: Simple,
                },
                args: [
                    Int {
                        value: 2,
                    },
                ],
            },
        ),
    },
}

Defs
========
[
    (
        "f",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
                (
                    1,
                    Uniform,
                ),
            ],
            body: PrimitiveCall {
                name: "_int_add",
                args: [
                    Var {
                        index: 0,
                    },
                    Var {
                        index: 1,
                    },
                ],
            },
            c_type: Default,
            var_bound: 2,
            need_simple: true,
            need_cps: false,
            need_specialized: false,
        },
    ),
    (
        "main",
        FunctionDefinition {
            args: [],
            body: Let {
                t: Return {
                    value: Int {
                        value: 1,
                    },
                },
                bound_index: 0,
                body: Redex {
                    function: Def {
                        name: "f",
                        effect: Simple,
                    },
                    args: [
                        Var {
                            index: 0,
                        },
                        Int {
                            value: 2,
                        },
                    ],
                },
            },
            c_type: SpecializedF(
                Specialized(
                    Integer,
                ),
            ),
            var_bound: 1,
            need_simple: false,
            need_cps: false,
            need_specialized: true,
        },
    ),
]