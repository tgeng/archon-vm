CLIR
========
[factorial__specialized]
function u0:0(i64, i64) -> i64 tail {
    ss0 = explicit_slot 8
    sig0 = (i64, i64) -> i64 tail
    fn0 = colocated u0:22 sig0

block0(v0: i64, v1: i64):
    brif v1, block3, block2

block2:
    v4 = iconst.i64 1
    jump block1(v4, v0)  ; v4 = 1

block3:
    v5 = iconst.i64 1
    v6 = isub.i64 v1, v5  ; v5 = 1
    v7 = call fn0(v0, v6)
    v8 = imul.i64 v1, v7
    jump block1(v8, v0)

block1(v2: i64, v3: i64):
    return v2
}


[main__specialized]
function u0:0(i64) -> i64 tail {
    ss0 = explicit_slot 8
    sig0 = (i64, i64) -> i64 tail
    fn0 = colocated u0:22 sig0

block0(v0: i64):
    v1 = iconst.i64 5
    return_call fn0(v0, v1)  ; v1 = 5
}


[__main__]
function u0:0() -> i64 fast {
    sig0 = () -> i64 apple_aarch64
    sig1 = (i64) -> i64 tail
    fn0 = u0:2 sig0
    fn1 = colocated u0:23 sig1

block0:
    v0 = call fn0()
    v1 = call fn1(v0)
    return v1
}
