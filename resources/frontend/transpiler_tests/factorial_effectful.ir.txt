FTerm
========
Handler {
    parameter: Struct {
        values: [],
    },
    parameter_disposer: None,
    parameter_replicator: None,
    transform: Lambda {
        arg_names: [
            (
                "p",
                Uniform,
            ),
            (
                "r",
                Uniform,
            ),
        ],
        body: Identifier {
            name: "r",
            effect: Simple,
        },
        effect: Simple,
    },
    handlers: [],
    input: Thunk {
        computation: Lambda {
            arg_names: [
                (
                    "e",
                    Uniform,
                ),
            ],
            body: Defs {
                defs: [
                    (
                        "factorial",
                        Def {
                            args: [
                                (
                                    "n",
                                    Specialized(
                                        Integer,
                                    ),
                                ),
                            ],
                            body: CaseInt {
                                t: Identifier {
                                    name: "n",
                                    effect: Simple,
                                },
                                result_type: SpecializedF(
                                    Specialized(
                                        Integer,
                                    ),
                                ),
                                branches: [
                                    (
                                        0,
                                        Int {
                                            value: 1,
                                        },
                                    ),
                                ],
                                default_branch: Some(
                                    Redex {
                                        function: Identifier {
                                            name: "_int_mul",
                                            effect: Simple,
                                        },
                                        args: [
                                            Identifier {
                                                name: "n",
                                                effect: Simple,
                                            },
                                            Redex {
                                                function: Identifier {
                                                    name: "factorial",
                                                    effect: Complex,
                                                },
                                                args: [
                                                    Redex {
                                                        function: Identifier {
                                                            name: "_int_sub",
                                                            effect: Simple,
                                                        },
                                                        args: [
                                                            Identifier {
                                                                name: "n",
                                                                effect: Simple,
                                                            },
                                                            Int {
                                                                value: 1,
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                ),
                            },
                            c_type: SpecializedF(
                                Specialized(
                                    Integer,
                                ),
                            ),
                        },
                    ),
                ],
                body: Some(
                    Redex {
                        function: Identifier {
                            name: "factorial",
                            effect: Simple,
                        },
                        args: [
                            Int {
                                value: 5,
                            },
                        ],
                    },
                ),
            },
            effect: Simple,
        },
        effect: Simple,
    },
}

Defs
========
[
    (
        "factorial",
        FunctionDefinition {
            args: [
                (
                    0,
                    Specialized(
                        Integer,
                    ),
                ),
            ],
            body: CaseInt {
                t: Var {
                    index: 0,
                },
                result_type: SpecializedF(
                    Specialized(
                        Integer,
                    ),
                ),
                branches: [
                    (
                        0,
                        Return {
                            value: Int {
                                value: 1,
                            },
                        },
                    ),
                ],
                default_branch: Some(
                    Let {
                        t: Let {
                            t: PrimitiveCall {
                                name: "_int_sub",
                                args: [
                                    Var {
                                        index: 0,
                                    },
                                    Int {
                                        value: 1,
                                    },
                                ],
                            },
                            bound_index: 1,
                            body: Redex {
                                function: Def {
                                    name: "factorial",
                                    effect: Complex,
                                },
                                args: [
                                    Var {
                                        index: 1,
                                    },
                                ],
                            },
                        },
                        bound_index: 2,
                        body: PrimitiveCall {
                            name: "_int_mul",
                            args: [
                                Var {
                                    index: 0,
                                },
                                Var {
                                    index: 2,
                                },
                            ],
                        },
                    },
                ),
            },
            c_type: SpecializedF(
                Specialized(
                    Integer,
                ),
            ),
            var_bound: 3,
            need_simple: false,
            need_cps: false,
            need_specialized: true,
        },
    ),
    (
        "main",
        FunctionDefinition {
            args: [],
            body: Handler {
                parameter: Struct {
                    values: [],
                },
                parameter_disposer: None,
                parameter_replicator: None,
                transform: Thunk {
                    t: Redex {
                        function: Def {
                            name: "main$__lambda_0",
                            effect: Simple,
                        },
                        args: [],
                    },
                    effect: Simple,
                },
                handlers: [],
                input: Thunk {
                    t: Redex {
                        function: Def {
                            name: "main$__lambda_1",
                            effect: Simple,
                        },
                        args: [],
                    },
                    effect: Simple,
                },
            },
            c_type: SpecializedF(
                Specialized(
                    Integer,
                ),
            ),
            var_bound: 0,
            need_simple: false,
            need_cps: false,
            need_specialized: true,
        },
    ),
    (
        "main$__lambda_0",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
                (
                    1,
                    Uniform,
                ),
            ],
            body: Return {
                value: Var {
                    index: 1,
                },
            },
            c_type: Default,
            var_bound: 2,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
    (
        "main$__lambda_1",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
            ],
            body: Redex {
                function: Def {
                    name: "factorial",
                    effect: Simple,
                },
                args: [
                    Int {
                        value: 5,
                    },
                ],
            },
            c_type: Default,
            var_bound: 1,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
]