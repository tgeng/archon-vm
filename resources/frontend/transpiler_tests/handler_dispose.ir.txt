FTerm
========
Handler {
    parameter: Int {
        value: 0,
    },
    parameter_disposer: None,
    parameter_replicator: None,
    transform: Lambda {
        arg_names: [
            (
                "p",
                Uniform,
            ),
            (
                "r",
                Uniform,
            ),
        ],
        body: Identifier {
            name: "r",
            effect: Simple,
        },
        effect: Simple,
    },
    handlers: [
        (
            Str {
                value: "get",
            },
            Lambda {
                arg_names: [
                    (
                        "p",
                        Uniform,
                    ),
                ],
                body: Struct {
                    values: [
                        Identifier {
                            name: "p",
                            effect: Simple,
                        },
                        Struct {
                            values: [
                                Int {
                                    value: 1,
                                },
                                Identifier {
                                    name: "p",
                                    effect: Simple,
                                },
                            ],
                        },
                    ],
                },
                effect: Simple,
            },
            Affine,
        ),
        (
            Str {
                value: "set",
            },
            Lambda {
                arg_names: [
                    (
                        "p",
                        Uniform,
                    ),
                    (
                        "x",
                        Uniform,
                    ),
                ],
                body: Struct {
                    values: [
                        Identifier {
                            name: "x",
                            effect: Simple,
                        },
                        Struct {
                            values: [
                                Int {
                                    value: 1,
                                },
                                Struct {
                                    values: [],
                                },
                            ],
                        },
                    ],
                },
                effect: Simple,
            },
            Affine,
        ),
    ],
    input: Thunk {
        computation: Handler {
            parameter: Int {
                value: 5,
            },
            parameter_disposer: Some(
                Lambda {
                    arg_names: [
                        (
                            "p",
                            Uniform,
                        ),
                    ],
                    body: OperationCall {
                        eff: Str {
                            value: "set",
                        },
                        args: [
                            Identifier {
                                name: "p",
                                effect: Simple,
                            },
                        ],
                        effect: Simple,
                    },
                    effect: Simple,
                },
            ),
            parameter_replicator: None,
            transform: Lambda {
                arg_names: [
                    (
                        "p",
                        Uniform,
                    ),
                    (
                        "r",
                        Uniform,
                    ),
                ],
                body: Identifier {
                    name: "r",
                    effect: Simple,
                },
                effect: Simple,
            },
            handlers: [
                (
                    Str {
                        value: "exp",
                    },
                    Lambda {
                        arg_names: [
                            (
                                "p",
                                Uniform,
                            ),
                            (
                                "cont",
                                Uniform,
                            ),
                        ],
                        body: Let {
                            name: "_",
                            t: Redex {
                                function: Force {
                                    thunk: Identifier {
                                        name: "cont",
                                        effect: Simple,
                                    },
                                    effect: Simple,
                                },
                                args: [
                                    Int {
                                        value: 1,
                                    },
                                    Identifier {
                                        name: "p",
                                        effect: Simple,
                                    },
                                ],
                            },
                            body: OperationCall {
                                eff: Str {
                                    value: "get",
                                },
                                args: [],
                                effect: Simple,
                            },
                        },
                        effect: Simple,
                    },
                    Complex,
                ),
            ],
            input: Thunk {
                computation: Let {
                    name: "_",
                    t: OperationCall {
                        eff: Str {
                            value: "exp",
                        },
                        args: [],
                        effect: Complex,
                    },
                    body: Int {
                        value: 1,
                    },
                },
                effect: Complex,
            },
        },
        effect: Simple,
    },
}

Defs
========
[
    (
        "main",
        FunctionDefinition {
            args: [],
            body: Handler {
                parameter: Int {
                    value: 0,
                },
                parameter_disposer: None,
                parameter_replicator: None,
                transform: Thunk {
                    t: Redex {
                        function: Def {
                            name: "main$__lambda_0",
                            effect: Simple,
                        },
                        args: [],
                    },
                    effect: Simple,
                },
                handlers: [
                    (
                        Str {
                            value: "get",
                        },
                        Thunk {
                            t: Redex {
                                function: Def {
                                    name: "main$__lambda_1",
                                    effect: Simple,
                                },
                                args: [],
                            },
                            effect: Simple,
                        },
                        Affine,
                    ),
                    (
                        Str {
                            value: "set",
                        },
                        Thunk {
                            t: Redex {
                                function: Def {
                                    name: "main$__lambda_2",
                                    effect: Simple,
                                },
                                args: [],
                            },
                            effect: Simple,
                        },
                        Affine,
                    ),
                ],
                input: Thunk {
                    t: Redex {
                        function: Def {
                            name: "main$__lambda_7",
                            effect: Simple,
                        },
                        args: [],
                    },
                    effect: Simple,
                },
            },
            c_type: SpecializedF(
                Specialized(
                    Integer,
                ),
            ),
            var_bound: 0,
            need_simple: false,
            need_cps: false,
            need_specialized: true,
        },
    ),
    (
        "main$__lambda_0",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
                (
                    1,
                    Uniform,
                ),
            ],
            body: Return {
                value: Var {
                    index: 1,
                },
            },
            c_type: Default,
            var_bound: 2,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
    (
        "main$__lambda_1",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
            ],
            body: Return {
                value: Struct {
                    values: [
                        Var {
                            index: 0,
                        },
                        Struct {
                            values: [
                                Int {
                                    value: 1,
                                },
                                Var {
                                    index: 0,
                                },
                            ],
                        },
                    ],
                },
            },
            c_type: Default,
            var_bound: 1,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
    (
        "main$__lambda_2",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
                (
                    1,
                    Uniform,
                ),
            ],
            body: Return {
                value: Struct {
                    values: [
                        Var {
                            index: 1,
                        },
                        Struct {
                            values: [
                                Int {
                                    value: 1,
                                },
                                Struct {
                                    values: [],
                                },
                            ],
                        },
                    ],
                },
            },
            c_type: Default,
            var_bound: 2,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
    (
        "main$__lambda_3",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
            ],
            body: OperationCall {
                eff: Str {
                    value: "set",
                },
                args: [
                    Var {
                        index: 0,
                    },
                ],
                effect: Simple,
            },
            c_type: Default,
            var_bound: 1,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
    (
        "main$__lambda_5",
        FunctionDefinition {
            args: [
                (
                    0,
                    Uniform,
                ),
                (
                    1,
                    Uniform,
                ),
            ],
            body: Let {
                t: Redex {
                    function: Force {
                        thunk: Var {
                            index: 1,
                        },
                        effect: Simple,
                    },
                    args: [
                        Int {
                            value: 1,
                        },
                        Var {
                            index: 0,
                        },
                    ],
                },
                bound_index: 2,
                body: OperationCall {
                    eff: Str {
                        value: "get",
                    },
                    args: [],
                    effect: Simple,
                },
            },
            c_type: Default,
            var_bound: 3,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
    (
        "main$__lambda_6",
        FunctionDefinition {
            args: [],
            body: Let {
                t: OperationCall {
                    eff: Str {
                        value: "exp",
                    },
                    args: [],
                    effect: Complex,
                },
                bound_index: 0,
                body: Return {
                    value: Int {
                        value: 1,
                    },
                },
            },
            c_type: Default,
            var_bound: 1,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
    (
        "main$__lambda_7",
        FunctionDefinition {
            args: [],
            body: Handler {
                parameter: Int {
                    value: 5,
                },
                parameter_disposer: Some(
                    Thunk {
                        t: Redex {
                            function: Def {
                                name: "main$__lambda_3",
                                effect: Simple,
                            },
                            args: [],
                        },
                        effect: Simple,
                    },
                ),
                parameter_replicator: None,
                transform: Thunk {
                    t: Redex {
                        function: Def {
                            name: "main$__lambda_0",
                            effect: Simple,
                        },
                        args: [],
                    },
                    effect: Simple,
                },
                handlers: [
                    (
                        Str {
                            value: "exp",
                        },
                        Thunk {
                            t: Redex {
                                function: Def {
                                    name: "main$__lambda_5",
                                    effect: Simple,
                                },
                                args: [],
                            },
                            effect: Simple,
                        },
                        Complex,
                    ),
                ],
                input: Thunk {
                    t: Redex {
                        function: Def {
                            name: "main$__lambda_6",
                            effect: Complex,
                        },
                        args: [],
                    },
                    effect: Complex,
                },
            },
            c_type: Default,
            var_bound: 0,
            need_simple: false,
            need_cps: true,
            need_specialized: false,
        },
    ),
]