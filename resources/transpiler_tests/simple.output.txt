UTerm
========
Int {
    value: 123,
}

Defs
========
[
    (
        "main",
        FunctionDefinition {
            args: [],
            body: Return {
                value: Int {
                    value: 123,
                },
            },
            c_type: SpecializedF(
                Specialized(
                    Integer,
                ),
            ),
            var_bound: 0,
        },
    ),
]

CLIR
========
[main]
function u0:0(i64) -> i64 tail {
    ss0 = explicit_slot 8

block0(v0: i64):
    v1 = iconst.i64 123
    v2 = ishl_imm v1, 1  ; v1 = 123
    v3 = iadd_imm v0, -8
    store v2, v3
    return v3
}


[main__specialized]
function u0:0(i64) -> i64 tail {
    ss0 = explicit_slot 8

block0(v0: i64):
    v1 = iconst.i64 123
    return v1  ; v1 = 123
}


[__main__]
function u0:0() -> i64 fast {
    sig0 = () -> i64 apple_aarch64
    sig1 = (i64) -> i64 tail
    fn0 = u0:2 sig0
    fn1 = colocated u0:4 sig1

block0:
    v0 = call fn0()
    v1 = call fn1(v0)
    return v1
}


Result
========
123